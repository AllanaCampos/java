Herança é a capacidade de uma subclasse de ter acesso as propriedades da superclasse(também chamada classe base) relacionada a esta subclasse. Dessa forma os atributos e métodos de uma classe são propagados de cima para baixo em um diagrama de classes.
Para estabelecer uma relação de herança entre a classe a classe B e a classe A, deve ser utilizada keyword extends:
[public][modTipo]class B extends A[...]

Exemplos de herança em C++:

#include<iostream>
using namespace std;

class Animal {
	string raca;
	double peso;
	public:
	Animal(string raca, double peso) {
		this->raca = raca;
		this->peso = peso;
	}	
};

class Cachorro : Animal {
	public:
    void latir() {
		cout << "Au au";
	}
};

class Veiculo {
	public:
    void tipo() {
		cout << "O veiculo eh um carro ou moto";
	}
};

class Carro : Veiculo {
	public:
    void tipo(){
		cout << "O veiculo eh um carro";
	}
};

class Forma {
	int lados;
	public:
    Forma(int lados) {
		this->lados = lados;
	}
	virtual void desenha() = 0;
};

class Quadrado : Forma {
	public:
	void desenha() override {

    }
};

class Pessoa {
	string nome;
	int idade;
	public:
    void falar(string fala) {
		cout << fala;
	}
};

class Funcionario : Pessoa {
	double salario;
	public:
    double calcRendaAnual() {
		return salario * 12;
	}
};

class Mesa {
	string material;
	double area;
	public:
    Mesa(string material, double area) {
		this->material = material;
		this->area = area;
	}
};

class MesaQuadrada : Mesa{
	public:
    void cortaMesa(){

    }
};

Exemplos de herança em Java:

package questao3;

public class Animal {
	String raca;
	double peso;
	
	public Animal(String raca, double peso) {
		this.raca = raca;
		this.peso = peso;
	}	
}

public class Cachorro extends Animal {
	
	public Cachorro(String raca, double peso) {
		super(raca, peso);
	}
	
	public void latir() {
		System.out.println("Au au");
	}
}

public class Veiculo {
	public void tipo() {
		System.out.println("O veiculo eh um carro ou moto");
	}
}

public class Carro extends Veiculo {
	
	@Override
	public void tipo() {
		System.out.println("O veiculo eh um carro");
	}
}

public class Forma {
	int lados;
	
	public Forma(int lados) {
		this.lados = lados;
	}

	public void desenha() {
		
	}
}

public class Quadrado extends Forma {

	public Quadrado(int lados) {
		super(lados);
	}
	
	@Override
	public void desenha() {
		
	}
}

public class Pessoa {
	String nome;
	int idade;
	
	public void falar(String fala) {
		System.out.println(fala);
	}
}

public class Funcionario extends Pessoa {
	double salario;
	public double calcRendaAnual() {
		return salario * 12;
	}
}

public class Mesa {
	String material;
	double area;
	public Mesa(String material, double area) {
		this.material = material;
		this.area = area;
	}
}

public class MesaQuadrada extends Mesa{
	public MesaQuadrada(String material, double area) {
		super(material, area);
	}
}